{
  "openapi": "3.1.0",
  "info": {
    "title": "Fynopsis VDR API",
    "description": "Document retrieval API for Fynopsis VDR",
    "version": "0.1.0"
  },
  "paths": {
    "/query": {
      "post": {
        "summary": "Query documents in a cluster",
        "description": "Runs a query against the specified cluster, optionally using advanced RAG, reasoning, planning, and web search features. Returns the response, sources, and thread ID.",
        "operationId": "query_endpoint_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Query executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Query Endpoint Query Post"
                },
                "example": {
                  "response": "The key findings are ...",
                  "sources": [
                    {
                      "file_id": "string",
                      "file_name": "string",
                      "snippet": "string"
                    }
                  ],
                  "thread_id": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Quota exceeded or plan restriction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cluster not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/query/stream": {
      "post": {
        "summary": "Query documents in a cluster (streamed)",
        "description": "Runs a query against the specified cluster and streams the response as a series of JSON events using HTTP Server-Sent Events (SSE). Useful for real-time applications that want to display incremental results as the query is processed.",
        "operationId": "query_stream_endpoint_query_stream_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Query executed successfully (SSE stream)",
            "content": {
              "application/json": {
                "schema": {}
              },
              "text/event-stream": {
                "example": "{\"type\": \"status\", \"status\": \"Query started\"}\\n\\n{\"type\": \"progress\", \"status\": \"Analyzing query\", \"thread_id\": \"string\"}\\n\\n{\"type\": \"response\", \"response\": \"Partial answer...\", \"sources\": [...], \"thread_id\": \"string\"}\\n\\n{\"type\": \"error\", \"message\": \"Error message\", \"thread_id\": \"string\"}\\n\\n{\"type\": \"status\", \"status\": \"Query completed\", \"thread_id\": \"string\"}\\n\\n"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Quota exceeded or plan restriction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cluster not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/project/rate-limits": {
      "get": {
        "summary": "Get project rate limits and quotas",
        "description": "Returns the current rate limit and quota usage for a project, including plan quotas, queries used, advanced queries used, and concurrent agents.",
        "operationId": "get_project_rate_limits_project_rate_limits_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project rate limits and quotas returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Project Rate Limits Project Rate Limits Get"
                },
                "example": {
                  "project_id": "uuid",
                  "project_name": "string",
                  "plan_name": "string",
                  "quotas": {
                    "totalSpaceAllowed": 1073741824,
                    "bytesProcessingAllowed": 1073741824,
                    "concurrentAgentsAllowed": 3
                  },
                  "usage": {
                    "queries_used": 123,
                    "advanced_queries_used": 45,
                    "concurrent_agents": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing project_id or invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "No active subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/clusters/files/upload": {
      "post": {
        "tags": [
          "File Operations"
        ],
        "summary": "Upload a file to a cluster",
        "description": "Uploads a file to the specified cluster. Fails if a file with the same name already exists. Enforces file type and size limits.",
        "operationId": "upload_file_clusters_files_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_clusters_files_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadFileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (file too large, unsupported type, or duplicate name)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "duplicate": {
                    "summary": "Duplicate file name",
                    "value": {
                      "detail": "A file with this name already exists in the cluster."
                    }
                  },
                  "size": {
                    "summary": "File too large",
                    "value": {
                      "detail": "File size exceeds 1 GB limit."
                    }
                  },
                  "type": {
                    "summary": "Unsupported file type",
                    "value": {
                      "detail": "Unsupported file type: .ext. Supported types are: ..."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cluster not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "detail": "Cluster not found."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "detail": "Error uploading file to S3: ..."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/clusters/files/download": {
      "post": {
        "tags": [
          "File Operations"
        ],
        "summary": "Download a file from a cluster",
        "description": "Downloads a file by file ID or name from the specified cluster. Returns the file as a binary stream with appropriate headers.",
        "operationId": "download_file_clusters_files_download_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadFileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadFileResponse"
                }
              }
            }
          },
          "404": {
            "description": "File or cluster not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "cluster": {
                    "summary": "Cluster not found",
                    "value": {
                      "detail": "Cluster not found."
                    }
                  },
                  "file": {
                    "summary": "File not found",
                    "value": {
                      "detail": "File not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "detail": "Error downloading file from S3: ..."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/clusters/files/list": {
      "post": {
        "tags": [
          "File Operations"
        ],
        "summary": "List files in a cluster",
        "description": "Lists all files in the root folder of a cluster.",
        "operationId": "list_files_clusters_files_list_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListFilesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFilesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cluster not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "detail": "Cluster not found."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "detail": "Error listing files: ..."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/clusters/files/delete": {
      "post": {
        "tags": [
          "File Operations"
        ],
        "summary": "Delete files from a cluster",
        "description": "Deletes one or more files from a cluster by file ID or name.",
        "operationId": "delete_files_clusters_files_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteFilesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFilesResponse"
                }
              }
            }
          },
          "400": {
            "description": "No file IDs or names provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "detail": "fileIds or fileNames or fileId or fileName must be provided"
                }
              }
            }
          },
          "404": {
            "description": "Cluster not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "detail": "Cluster not found."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "detail": "Error deleting files: ..."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/clusters/files/rename": {
      "post": {
        "tags": [
          "File Operations"
        ],
        "summary": "Rename a file or folder in a cluster",
        "description": "Renames a file or folder in a cluster by file ID or name. File extensions cannot be changed.",
        "operationId": "rename_file_clusters_files_rename_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameFileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenameFileResponse"
                }
              }
            }
          },
          "400": {
            "description": "File extension change, duplicate name, or invalid characters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "extension": {
                    "summary": "File extension cannot be changed",
                    "value": {
                      "detail": "File extension cannot be changed"
                    }
                  },
                  "duplicate": {
                    "summary": "Duplicate name",
                    "value": {
                      "detail": "A file with this name already exists in the cluster"
                    }
                  },
                  "invalid": {
                    "summary": "Invalid characters",
                    "value": {
                      "detail": "Name contains invalid characters"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "File/folder or cluster not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "cluster": {
                    "summary": "Cluster not found",
                    "value": {
                      "detail": "Cluster not found."
                    }
                  },
                  "file": {
                    "summary": "File or folder not found",
                    "value": {
                      "detail": "File or folder not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "detail": "Error renaming item: ..."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/clusters/files/update": {
      "post": {
        "tags": [
          "File Operations"
        ],
        "summary": "Update a file in a cluster",
        "description": "Updates the contents of a file in a cluster by file ID or name. The file is replaced with the new upload.",
        "operationId": "update_file_clusters_files_update_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_file_clusters_files_update_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFileResponse"
                }
              }
            }
          },
          "400": {
            "description": "File size exceeds 1GB or unsupported file type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "size": {
                    "summary": "File too large",
                    "value": {
                      "detail": "File size exceeds 1 GB limit."
                    }
                  },
                  "type": {
                    "summary": "Unsupported file type",
                    "value": {
                      "detail": "Unsupported file type: .ext. Supported types are: ..."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "File or cluster not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "cluster": {
                    "summary": "Cluster not found",
                    "value": {
                      "detail": "Cluster not found."
                    }
                  },
                  "file": {
                    "summary": "File not found",
                    "value": {
                      "detail": "File not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "detail": "Error updating DynamoDB: ..."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/clusters/create": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "summary": "Create a new cluster",
        "description": "Creates a new cluster in the authenticated user's project. The cluster name must be unique within the project. Returns the created cluster's details on success.",
        "operationId": "create_cluster_clusters_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cluster created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Cluster Clusters Create Post"
                },
                "example": {
                  "message": "Cluster created and allocated successfully",
                  "cluster": {
                    "id": "uuid",
                    "name": "my-cluster",
                    "description": "A test cluster",
                    "project_id": "uuid",
                    "user_id": "uuid",
                    "status": "allocating"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing project_id or invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Duplicate cluster name",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Quota exceeded or plan restriction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/clusters/delete": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "summary": "Delete a cluster",
        "description": "Deletes a cluster by name or ID from the authenticated user's project. Only the cluster owner or a project admin can delete a cluster. This operation also deletes all files in the cluster and its associated Neo4j database.",
        "operationId": "delete_cluster_clusters_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteClusterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cluster deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Delete Cluster Clusters Delete Post"
                },
                "example": {
                  "message": "Cluster deleted successfully",
                  "clusterId": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Missing project_id or invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cluster not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/clusters/rename": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "summary": "Rename a cluster",
        "description": "Renames a cluster by name or ID in the authenticated user's project. Only the cluster owner or a project admin can rename a cluster. The new name must be unique within the project.",
        "operationId": "rename_cluster_clusters_rename_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameClusterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cluster renamed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Rename Cluster Clusters Rename Post"
                },
                "example": {
                  "message": "Cluster renamed successfully",
                  "clusterId": "uuid",
                  "oldName": "my-cluster",
                  "newName": "renamed-cluster"
                }
              }
            }
          },
          "400": {
            "description": "Missing project_id or invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cluster not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Duplicate cluster name",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/clusters/list": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "summary": "List all clusters in a project",
        "description": "Lists all clusters for the authenticated user's project. Returns an array of cluster objects and a count.",
        "operationId": "list_clusters_clusters_list_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListClustersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Clusters listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List Clusters Clusters List Post"
                },
                "example": {
                  "clusters": [
                    {
                      "id": "uuid",
                      "name": "my-cluster",
                      "description": "A test cluster",
                      "project_id": "uuid",
                      "user_id": "uuid",
                      "status": "allocating"
                    }
                  ],
                  "count": 1
                }
              }
            }
          },
          "400": {
            "description": "Missing project_id or invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/clusters/status": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "summary": "Get cluster status and info",
        "description": "Returns the status and basic information for a cluster by name or ID in the authenticated user's project. Only the cluster owner or a project admin/collaborator can view the cluster.",
        "operationId": "cluster_status_clusters_status_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cluster status and info returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Cluster Status Clusters Status Post"
                },
                "example": {
                  "id": "uuid",
                  "name": "my-cluster",
                  "status": "allocating",
                  "description": "A test cluster",
                  "projectId": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Missing project_id or invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cluster not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/clusters/{cluster_id}/rate-limits": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "summary": "Get cluster rate limits and quotas",
        "description": "Returns the current rate limit and quota usage for a cluster, including total space used, bytes processed, and plan quotas.",
        "operationId": "get_rate_limits_clusters__cluster_id__rate_limits_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Cluster Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cluster rate limits and quotas returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Rate Limits Clusters  Cluster Id  Rate Limits Get"
                },
                "example": {
                  "totalSpaceUsed": 123456789,
                  "bytesProcessed": 987654321,
                  "totalSpaceAllowed": 1073741824,
                  "bytesProcessingAllowed": 1073741824
                }
              }
            }
          },
          "404": {
            "description": "Cluster not found or missing project_id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "No active subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_update_file_clusters_files_update_post": {
        "properties": {
          "cluster": {
            "type": "string",
            "title": "Cluster",
            "description": "Cluster name or ID"
          },
          "fileId": {
            "type": "string",
            "title": "Fileid",
            "description": "File ID"
          },
          "fileName": {
            "type": "string",
            "title": "Filename",
            "description": "File name"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "New file to upload (max 1GB)"
          }
        },
        "type": "object",
        "required": [
          "cluster",
          "file"
        ],
        "title": "Body_update_file_clusters_files_update_post"
      },
      "Body_upload_file_clusters_files_upload_post": {
        "properties": {
          "cluster": {
            "type": "string",
            "title": "Cluster",
            "description": "Cluster name or ID"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "File to upload (max 1GB)"
          }
        },
        "type": "object",
        "required": [
          "cluster",
          "file"
        ],
        "title": "Body_upload_file_clusters_files_upload_post"
      },
      "ClusterStatusRequest": {
        "properties": {
          "cluster": {
            "type": "string",
            "title": "Cluster"
          }
        },
        "type": "object",
        "required": [
          "cluster"
        ],
        "title": "ClusterStatusRequest"
      },
      "CreateClusterRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CreateClusterRequest"
      },
      "DeleteClusterRequest": {
        "properties": {
          "cluster": {
            "type": "string",
            "title": "Cluster"
          }
        },
        "type": "object",
        "required": [
          "cluster"
        ],
        "title": "DeleteClusterRequest"
      },
      "DeleteFilesRequest": {
        "properties": {
          "cluster": {
            "type": "string",
            "title": "Cluster"
          },
          "fileIds": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fileids"
          },
          "fileNames": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filenames"
          },
          "fileId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fileid"
          },
          "fileName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filename"
          }
        },
        "type": "object",
        "required": [
          "cluster"
        ],
        "title": "DeleteFilesRequest"
      },
      "DeleteFilesResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "results": {
            "$ref": "#/components/schemas/DeleteFilesResults"
          }
        },
        "type": "object",
        "required": [
          "message",
          "results"
        ],
        "title": "DeleteFilesResponse"
      },
      "DeleteFilesResultItem": {
        "properties": {
          "itemId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Itemid"
          },
          "itemName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Itemname"
          },
          "isFolder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isfolder"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "title": "DeleteFilesResultItem"
      },
      "DeleteFilesResults": {
        "properties": {
          "successful": {
            "items": {
              "$ref": "#/components/schemas/DeleteFilesResultItem"
            },
            "type": "array",
            "title": "Successful"
          },
          "failed": {
            "items": {
              "$ref": "#/components/schemas/DeleteFilesResultItem"
            },
            "type": "array",
            "title": "Failed"
          },
          "summary": {
            "$ref": "#/components/schemas/DeleteFilesSummary"
          }
        },
        "type": "object",
        "required": [
          "successful",
          "failed",
          "summary"
        ],
        "title": "DeleteFilesResults"
      },
      "DeleteFilesSummary": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "succeeded": {
            "type": "integer",
            "title": "Succeeded"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          }
        },
        "type": "object",
        "required": [
          "total",
          "succeeded",
          "failed"
        ],
        "title": "DeleteFilesSummary"
      },
      "DownloadFileRequest": {
        "properties": {
          "cluster": {
            "type": "string",
            "title": "Cluster"
          },
          "fileId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fileid"
          },
          "fileName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filename"
          }
        },
        "type": "object",
        "required": [
          "cluster"
        ],
        "title": "DownloadFileRequest"
      },
      "DownloadFileResponse": {
        "properties": {
          "fileName": {
            "type": "string",
            "title": "Filename"
          },
          "contentType": {
            "type": "string",
            "title": "Contenttype"
          },
          "fileContent": {
            "type": "string",
            "format": "binary",
            "title": "Filecontent"
          }
        },
        "type": "object",
        "required": [
          "fileName",
          "contentType",
          "fileContent"
        ],
        "title": "DownloadFileResponse"
      },
      "ErrorResponse": {
        "properties": {
          "detail": {
            "type": "string",
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "ErrorResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ListClustersRequest": {
        "properties": {},
        "type": "object",
        "title": "ListClustersRequest"
      },
      "ListFilesItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "isFolder": {
            "type": "boolean",
            "title": "Isfolder"
          },
          "parentFolderId": {
            "type": "string",
            "title": "Parentfolderid"
          },
          "parentFolderName": {
            "type": "string",
            "title": "Parentfoldername"
          },
          "lastModified": {
            "type": "string",
            "title": "Lastmodified"
          },
          "uploadedBy": {
            "type": "string",
            "title": "Uploadedby"
          },
          "uploadedByEmail": {
            "type": "string",
            "title": "Uploadedbyemail"
          },
          "size": {
            "type": "string",
            "title": "Size"
          },
          "contentType": {
            "type": "string",
            "title": "Contenttype"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "isFolder",
          "parentFolderId",
          "parentFolderName",
          "lastModified",
          "uploadedBy",
          "uploadedByEmail",
          "size",
          "contentType",
          "status"
        ],
        "title": "ListFilesItem"
      },
      "ListFilesRequest": {
        "properties": {
          "cluster": {
            "type": "string",
            "title": "Cluster"
          }
        },
        "type": "object",
        "required": [
          "cluster"
        ],
        "title": "ListFilesRequest"
      },
      "ListFilesResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ListFilesItem"
            },
            "type": "array",
            "title": "Items"
          },
          "empty": {
            "type": "boolean",
            "title": "Empty"
          }
        },
        "type": "object",
        "required": [
          "items",
          "empty"
        ],
        "title": "ListFilesResponse"
      },
      "QueryRequest": {
        "properties": {
          "cluster": {
            "type": "string",
            "title": "Cluster"
          },
          "query": {
            "type": "string",
            "title": "Query"
          },
          "thread_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thread Id"
          },
          "file_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Ids",
            "default": []
          },
          "use_fast_rag": {
            "type": "boolean",
            "title": "Use Fast Rag",
            "default": false
          },
          "use_reasoning": {
            "type": "boolean",
            "title": "Use Reasoning",
            "default": false
          },
          "use_deep_search": {
            "type": "boolean",
            "title": "Use Deep Search",
            "default": false
          },
          "use_deep_research": {
            "type": "boolean",
            "title": "Use Deep Research",
            "default": false
          },
          "use_planning": {
            "type": "boolean",
            "title": "Use Planning",
            "default": false
          },
          "web_search": {
            "type": "boolean",
            "title": "Web Search",
            "default": false
          },
          "code_execution": {
            "type": "boolean",
            "title": "Code Execution",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "cluster",
          "query"
        ],
        "title": "QueryRequest"
      },
      "RenameClusterRequest": {
        "properties": {
          "cluster": {
            "type": "string",
            "title": "Cluster"
          },
          "newName": {
            "type": "string",
            "title": "Newname"
          }
        },
        "type": "object",
        "required": [
          "cluster",
          "newName"
        ],
        "title": "RenameClusterRequest"
      },
      "RenameFileRequest": {
        "properties": {
          "cluster": {
            "type": "string",
            "title": "Cluster"
          },
          "fileId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fileid"
          },
          "fileName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filename"
          },
          "newName": {
            "type": "string",
            "title": "Newname"
          }
        },
        "type": "object",
        "required": [
          "cluster",
          "newName"
        ],
        "title": "RenameFileRequest"
      },
      "RenameFileResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "itemId": {
            "type": "string",
            "title": "Itemid"
          },
          "oldName": {
            "type": "string",
            "title": "Oldname"
          },
          "newName": {
            "type": "string",
            "title": "Newname"
          }
        },
        "type": "object",
        "required": [
          "message",
          "itemId",
          "oldName",
          "newName"
        ],
        "title": "RenameFileResponse"
      },
      "UpdateFileResponse": {
        "properties": {
          "fileId": {
            "type": "string",
            "title": "Fileid"
          },
          "fileName": {
            "type": "string",
            "title": "Filename"
          },
          "filePath": {
            "type": "string",
            "title": "Filepath"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "fileId",
          "fileName",
          "filePath",
          "message"
        ],
        "title": "UpdateFileResponse"
      },
      "UploadFileResponse": {
        "properties": {
          "fileId": {
            "type": "string",
            "title": "Fileid",
            "description": "Unique file ID"
          },
          "fileName": {
            "type": "string",
            "title": "Filename",
            "description": "Original file name"
          }
        },
        "type": "object",
        "required": [
          "fileId",
          "fileName"
        ],
        "title": "UploadFileResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}